// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/app/handlers/notehandler.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "github.com/FischukSergey/gophkeeper/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockProtoNoteService is a mock of ProtoNoteService interface.
type MockProtoNoteService struct {
	ctrl     *gomock.Controller
	recorder *MockProtoNoteServiceMockRecorder
}

// MockProtoNoteServiceMockRecorder is the mock recorder for MockProtoNoteService.
type MockProtoNoteServiceMockRecorder struct {
	mock *MockProtoNoteService
}

// NewMockProtoNoteService creates a new mock instance.
func NewMockProtoNoteService(ctrl *gomock.Controller) *MockProtoNoteService {
	mock := &MockProtoNoteService{ctrl: ctrl}
	mock.recorder = &MockProtoNoteServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProtoNoteService) EXPECT() *MockProtoNoteServiceMockRecorder {
	return m.recorder
}

// NoteAdd mocks base method.
func (m *MockProtoNoteService) NoteAdd(ctx context.Context, note models.Note) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NoteAdd", ctx, note)
	ret0, _ := ret[0].(error)
	return ret0
}

// NoteAdd indicates an expected call of NoteAdd.
func (mr *MockProtoNoteServiceMockRecorder) NoteAdd(ctx, note interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NoteAdd", reflect.TypeOf((*MockProtoNoteService)(nil).NoteAdd), ctx, note)
}

// NoteDelete mocks base method.
func (m *MockProtoNoteService) NoteDelete(ctx context.Context, userID, noteID int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NoteDelete", ctx, userID, noteID)
	ret0, _ := ret[0].(error)
	return ret0
}

// NoteDelete indicates an expected call of NoteDelete.
func (mr *MockProtoNoteServiceMockRecorder) NoteDelete(ctx, userID, noteID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NoteDelete", reflect.TypeOf((*MockProtoNoteService)(nil).NoteDelete), ctx, userID, noteID)
}

// NoteGetList mocks base method.
func (m *MockProtoNoteService) NoteGetList(ctx context.Context, userID int64) ([]models.Note, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NoteGetList", ctx, userID)
	ret0, _ := ret[0].([]models.Note)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NoteGetList indicates an expected call of NoteGetList.
func (mr *MockProtoNoteServiceMockRecorder) NoteGetList(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NoteGetList", reflect.TypeOf((*MockProtoNoteService)(nil).NoteGetList), ctx, userID)
}
