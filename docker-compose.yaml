services:
  app:
    build:
      context: .
      dockerfile: build/app.Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - CONFIG_PATH=./config/local.yml
      - DB_HOST=db
      - DB_PORT=5432
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
    networks:
      - gophkeeper-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gophkeeper-network

  migration:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path", "/migrations", "-database",  "postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable", "up"]
    depends_on:
      - db
    networks:
      - gophkeeper-network
    deploy:
      restart_policy:
        condition: none
    labels:
      - "com.docker.compose.project.working_dir=${PWD}"
    restart: "no"

volumes:
  postgres_data:

networks:
  gophkeeper-network:
    driver: bridge